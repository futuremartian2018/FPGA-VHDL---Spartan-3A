

LCDBUFF		equ	40h
CLOCKFLAG	bit	00h
CLOCKSETFLAG	bit	01h
CLOCKBLINKFLAG	bit	02h
CLOCKSETSEL	equ	50h

;RESET:***********************************************
		ORG	0000h
		AJMP	START
;IE0IRQ:**********************************************
		ORG	0003h
		RETI
;TF0IRQ:**********************************************
		ORG	000Bh
		AJMP	CLOCKINT
;IE1IRQ:**********************************************
		ORG	0013h
		RETI
;TF1IRQ:**********************************************
		ORG	001Bh
		RETI
;RITIIRQ:*********************************************
		ORG	0023h
		RETI
;TF2EXF2IRQ:******************************************
		ORG	002Bh
		RETI
;*****************************************************

START:		ACALL	LCDCLEARBUFF
		ACALL	LCDINIT
		ACALL	LCDCLEAR
		CLR	A
		MOV	R2,A
		MOV	R3,A
		MOV	R4,A
		CLR	CLOCKFLAG
		CLR	CLOCKBLINKFLAG
		ACALL	CLOCKSHOW
		MOV	TMOD,#02h	;8 bit auto reload
		MOV	TL0,#255-100	
		MOV	TH0,#256-100	;100us intervall
		MOV	IE,#82h		;Enable timer 0 interrupt
		MOV	R7,#100
		MOV	R6,#100
		MOV	TCON,#10h	;Start timer 0
START1:		CLR	CLOCKSETFLAG
		MOV	CLOCKSETSEL,#00h
START2:		JNB	P1.0,CLOCKSET
		JNB	CLOCKFLAG,START3
		CLR	CLOCKFLAG
		ACALL	CLOCKINC
		ACALL	CLOCKSHOW
START3:		SJMP	START2		;Enter endless loop

CLOCKSET:	MOV	CLOCKSETSEL,#01h
		SETB	CLOCKSETFLAG
CLOCKSET1:	JNB	P1.0,CLOCKSET1
CLOCKSET2:	JB	P1.0,CLOCKSET2
		MOV	CLOCKSETSEL,#02h
CLOCKSET3:	JNB	P1.0,CLOCKSET3
CLOCKSET4:	JB	P1.0,CLOCKSET4
		MOV	CLOCKSETSEL,#03h
CLOCKSET5:	JNB	P1.0,CLOCKSET5
CLOCKSET6:	JB	P1.0,CLOCKSET6
		MOV	CLOCKSETSEL,#00h
CLOCKSET7:	JNB	P1.0,CLOCKSET7
		SJMP	START1

CLOCKINC:	MOV	A,R2
		ADD	A,#01h
		DA	A
		MOV	R2,A
		CJNE	A,#60h,CLOCKINCEX
		MOV	R2,#00h
		MOV	A,R3
		ADD	A,#01h
		DA	A
		MOV	R3,A
		CJNE	A,#60h,CLOCKINCEX
		MOV	R3,#00h
		MOV	A,R4
		ADD	A,#01h
		DA	A
		MOV	R4,A
		CJNE	A,#24h,CLOCKINCEX
		MOV	R4,#00h
CLOCKINCEX:	RET

CLOCKSHOW:	MOV	A,#04h
		ACALL	LCDSETADR
		MOV	R5,CLOCKSETSEL
		MOV	R0,#LCDBUFF
		MOV	A,R4		;Hours
		SWAP	A
		ANL	A,#0Fh
		ORL	A,#30h
		CJNE	R5,#01h,CLOCKSHOW1
		JNB	CLOCKBLINKFLAG,CLOCKSHOW1
		MOV	A,#20h
CLOCKSHOW1:	MOV	@R0,A
		INC	R0
		MOV	A,R4		;Hours
		ANL	A,#0Fh
		ORL	A,#30h
		CJNE	R5,#01h,CLOCKSHOW2
		JNB	CLOCKBLINKFLAG,CLOCKSHOW2
		MOV	A,#20h
CLOCKSHOW2:	MOV	@R0,A
		INC	R0
		MOV	@R0,#':'
		INC	R0
		MOV	A,R3		;Minutes
		SWAP	A
		ANL	A,#0Fh
		ORL	A,#30h
		CJNE	R5,#02h,CLOCKSHOW3
		JNB	CLOCKBLINKFLAG,CLOCKSHOW3
		MOV	A,#20h
CLOCKSHOW3:	MOV	@R0,A
		INC	R0
		MOV	A,R3		;Minutes
		ANL	A,#0Fh
		ORL	A,#30h
		CJNE	R5,#02h,CLOCKSHOW4
		JNB	CLOCKBLINKFLAG,CLOCKSHOW4
		MOV	A,#20h
CLOCKSHOW4:	MOV	@R0,A
		INC	R0
		MOV	@R0,#':'
		INC	R0
		MOV	A,R2		;Seconds
		SWAP	A
		ANL	A,#0Fh
		ORL	A,#30h
		CJNE	R5,#03h,CLOCKSHOW5
		JNB	CLOCKBLINKFLAG,CLOCKSHOW5
		MOV	A,#20h
CLOCKSHOW5:	MOV	@R0,A
		INC	R0
		MOV	A,R2		;Seconds
		ANL	A,#0Fh
		ORL	A,#30h
		CJNE	R5,#03h,CLOCKSHOW6
		JNB	CLOCKBLINKFLAG,CLOCKSHOW6
		MOV	A,#20h
CLOCKSHOW6:	MOV	@R0,A
		MOV	R0,#LCDBUFF
		MOV	R5,#8
		ACALL	LCDPRINTSTR
		RET

CLOCKINT:	JB	CLOCKSETFLAG,CLOCKSETINT
		DJNZ	R7,CLOCKINTEX
		MOV	R7,#100
		DJNZ	R6,CLOCKINTEX
		MOV	R6,#100
		SETB	CLOCKFLAG
CLOCKINTEX:	RETI
CLOCKSETINT:	DJNZ	R7,CLOCKINTEX
		MOV	R7,#100
		DJNZ	R6,CLOCKINTEX
		MOV	R6,#25
		CPL	CLOCKBLINKFLAG
		JB	P1.1,CLOCKSETINTEX
		CLR	CLOCKBLINKFLAG
		MOV	R5,CLOCKSETSEL
		CJNE	R5,#03h,CLOCKSETINT1
		MOV	A,R2
		ADD	A,#01h
		DA	A
		MOV	R2,A
		CJNE	A,#60h,CLOCKSETINT1
		MOV	R2,#00h
CLOCKSETINT1:	CJNE	R5,#02h,CLOCKSETINT2
		MOV	A,R3
		ADD	A,#01h
		DA	A
		MOV	R3,A
		CJNE	A,#60h,CLOCKSETINT2
		MOV	R3,#00h
CLOCKSETINT2:	CJNE	R5,#01h,CLOCKSETINTEX
		MOV	A,R4
		ADD	A,#01h
		DA	A
		MOV	R4,A
		CJNE	A,#24h,CLOCKSETINTEX
		MOV	R4,#00h
CLOCKSETINTEX:	ACALL	CLOCKSHOW
		RETI

;------------------------------------------------------------------
;LCD Output.
;------------------------------------------------------------------
LCDDELAY:	PUSH	07h
		MOV	R7,#00h
		DJNZ	R7,$
		POP	07h
		RET

;A contains nibble, ACC.4 contains RS
LCDNIBOUT:	SETB	ACC.5				;E
		MOV	P2,A
		CLR	P2.5				;Negative edge on E
		RET

;A contains byte
LCDCMDOUT:	PUSH	ACC
		SWAP	A				;High nibble first
		ANL	A,#0Fh
		ACALL	LCDNIBOUT
		POP	ACC
		ANL	A,#0Fh
		ACALL	LCDNIBOUT
		ACALL	LCDDELAY			;Wait for BF to clear
		RET

;A contains byte
LCDCHROUT:	PUSH	ACC
		SWAP	A				;High nibble first
		ANL	A,#0Fh
		SETB	ACC.4				;RS
		ACALL	LCDNIBOUT
		POP	ACC
		ANL	A,#0Fh
		SETB	ACC.4				;RS
		ACALL	LCDNIBOUT
		ACALL	LCDDELAY			;Wait for BF to clear
		RET

LCDCLEAR:	MOV	A,#00000001b
		ACALL	LCDCMDOUT
		MOV	R7,#00h
LCDCLEAR1:	ACALL	LCDDELAY
		DJNZ	R7,LCDCLEAR1
		RET

;A contais address
LCDSETADR:	ORL	A,#10000000b
		ACALL	LCDCMDOUT
		RET

LCDPRINTSTR:	MOV	A,@R0
		ACALL	LCDCHROUT
		INC	R0
		DJNZ	R5,LCDPRINTSTR
		RET

LCDINIT:	MOV	A,#00000011b			;Function set
		ACALL	LCDNIBOUT
		ACALL	LCDDELAY			;Wait for BF to clear
		MOV	A,#00101000b
		ACALL	LCDCMDOUT
		MOV	A,#00101000b
		ACALL	LCDCMDOUT
		MOV	A,#00001100b			;Display ON/OFF
		ACALL	LCDCMDOUT
		ACALL	LCDCLEAR			;Clear
		MOV	A,#00000110b			;Cursor direction
		ACALL	LCDCMDOUT
		RET

LCDCLEARBUFF:	MOV	R0,#LCDBUFF
		MOV	R7,#10h
		MOV	A,#20H
LCDCLEARBUFF1:	MOV	@R0,A
		INC	R0
		DJNZ	R7,LCDCLEARBUFF1
		RET
		END
